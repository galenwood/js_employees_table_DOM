{"mappings":"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","sources":["<anon>","src/scripts/main.js"],"sourcesContent":["\"use strict\";\ndocument.addEventListener(\"DOMContentLoaded\", function() {\n    var updateRows = function updateRows() {\n        rows = Array.from(tbody.querySelectorAll(\"tr\"));\n    };\n    var sortColumn = function sortColumn(index) {\n        updateRows();\n        rows.sort(function(a, b) {\n            var cellA = a.cells[index].textContent.trim();\n            var cellB = b.cells[index].textContent.trim();\n            var isCurrency = cellA.includes(\"$\");\n            if (isCurrency) {\n                var valA = parseFloat(cellA.replace(/[$,]/g, \"\"));\n                var valB = parseFloat(cellB.replace(/[$,]/g, \"\"));\n                return sortOrder[index] ? valA - valB : valB - valA;\n            }\n            return sortOrder[index] ? cellA.localeCompare(cellB) : cellB.localeCompare(cellA);\n        });\n        tbody.innerHTML = \"\";\n        rows.forEach(function(row) {\n            return tbody.appendChild(row);\n        });\n        sortOrder[index] = !sortOrder[index];\n    };\n    var toggleActiveRow = function toggleActiveRow(row) {\n        document.querySelectorAll(\"tr.active\").forEach(function(r) {\n            return r.classList.remove(\"active\");\n        });\n        row.classList.add(\"active\");\n    };\n    var showNotification = function showNotification(title, message, type) {\n        var notification = document.createElement(\"div\");\n        notification.className = \"notification \".concat(type);\n        notification.setAttribute(\"data-qa\", \"notification\");\n        notification.innerHTML = '\\n      <h2 class=\"title\">'.concat(title, \"</h2>\\n      <p>\").concat(message, \"</p>\\n    \");\n        document.body.appendChild(notification);\n        setTimeout(function() {\n            notification.remove();\n        }, 3000);\n    };\n    var validateForm = function validateForm() {\n        var personName = form.elements.name.value.trim();\n        if (personName.length < 4 && personName.length > 0) {\n            showNotification(\"Error!\", \"The minimum name length is 4 letters\", \"error\");\n            return false;\n        }\n        var age = parseInt(form.elements.age.value, 10);\n        if (age < 18 || age > 90) {\n            showNotification(\"Error!\", \"You are too young/old for this\", \"error\");\n            return false;\n        }\n        return Array.from(form.elements).every(function(input) {\n            if (input.tagName === \"INPUT\" || input.tagName === \"SELECT\") {\n                if (!input.value.trim()) {\n                    showNotification(\"Error!\", \"Fill in all fields\", \"error\");\n                    return false;\n                }\n            }\n            return true;\n        });\n    };\n    var getFormData = function getFormData() {\n        return {\n            name: form.elements.name.value.trim(),\n            position: form.elements.position.value.trim(),\n            office: form.elements.office.value.trim(),\n            age: parseInt(form.elements.age.value, 10),\n            salary: parseFloat(form.elements.salary.value.replace(/[^0-9.]/g, \"\"))\n        };\n    };\n    var headers = document.querySelectorAll(\"th\");\n    var tbody = document.querySelector(\"tbody\");\n    var rows = Array.from(tbody.querySelectorAll(\"tr\"));\n    var sortOrder = Array(headers.length).fill(true);\n    headers.forEach(function(header, index) {\n        header.addEventListener(\"click\", function() {\n            return sortColumn(index);\n        });\n    });\n    tbody.addEventListener(\"click\", function(e) {\n        var row = e.target.closest(\"tr\");\n        if (row) toggleActiveRow(row);\n    });\n    var form = document.createElement(\"form\");\n    form.className = \"new-employee-form\";\n    form.innerHTML = '\\n    <label>\\n      Name: <input name=\"name\" type=\"text\" data-qa=\"name\" required>\\n    </label>\\n    <label>\\n      Position: <input name=\"position\" type=\"text\" data-qa=\"position\" required>\\n    </label>\\n    <label>\\n      Office:\\n      <select name=\"office\" data-qa=\"office\" required>\\n        <option>Tokyo</option>\\n        <option>Singapore</option>\\n        <option>London</option>\\n        <option>New York</option>\\n        <option>Edinburgh</option>\\n        <option>San Francisco</option>\\n      </select>\\n    </label>\\n    <label>\\n      Age: <input name=\"age\" type=\"number\" data-qa=\"age\" required>\\n    </label>\\n    <label>\\n      Salary: <input name=\"salary\" type=\"number\" data-qa=\"salary\" required>\\n    </label>\\n    <button type=\"button\">Save to table</button>\\n  ';\n    document.body.appendChild(form);\n    form.querySelector(\"button\").addEventListener(\"click\", function(e) {\n        e.preventDefault();\n        if (!validateForm()) return;\n        var newPerson = getFormData();\n        var newRow = document.createElement(\"tr\");\n        newRow.innerHTML = \"\\n      <td>\".concat(newPerson.name, \"</td>\\n      <td>\").concat(newPerson.position, \"</td>\\n      <td>\").concat(newPerson.office, \"</td>\\n      <td>\").concat(newPerson.age, \"</td>\\n      <td>$\").concat(newPerson.salary.toLocaleString(\"en\"), \"</td>\\n    \");\n        tbody.prepend(newRow);\n        form.reset();\n        showNotification(\"Success!\", \"+1 employee\", \"success\");\n    });\n});\n\n//# sourceMappingURL=index.765cba7a.js.map\n","'use strict';\n\ndocument.addEventListener('DOMContentLoaded', () => {\n  const headers = document.querySelectorAll('th');\n  const tbody = document.querySelector('tbody');\n  let rows = Array.from(tbody.querySelectorAll('tr'));\n  const sortOrder = Array(headers.length).fill(true);\n\n  function updateRows() {\n    rows = Array.from(tbody.querySelectorAll('tr'));\n  }\n\n  function sortColumn(index) {\n    updateRows();\n\n    rows.sort((a, b) => {\n      const cellA = a.cells[index].textContent.trim();\n      const cellB = b.cells[index].textContent.trim();\n      const isCurrency = cellA.includes('$');\n\n      if (isCurrency) {\n        const valA = parseFloat(cellA.replace(/[$,]/g, ''));\n        const valB = parseFloat(cellB.replace(/[$,]/g, ''));\n\n        return sortOrder[index] ? valA - valB : valB - valA;\n      }\n\n      return sortOrder[index]\n        ? cellA.localeCompare(cellB)\n        : cellB.localeCompare(cellA);\n    });\n\n    tbody.innerHTML = '';\n    rows.forEach((row) => tbody.appendChild(row));\n    sortOrder[index] = !sortOrder[index];\n  }\n\n  headers.forEach((header, index) => {\n    header.addEventListener('click', () => sortColumn(index));\n  });\n\n  function toggleActiveRow(row) {\n    document\n      .querySelectorAll('tr.active')\n      .forEach((r) => r.classList.remove('active'));\n    row.classList.add('active');\n  }\n\n  tbody.addEventListener('click', (e) => {\n    const row = e.target.closest('tr');\n\n    if (row) {\n      toggleActiveRow(row);\n    }\n  });\n\n  const form = document.createElement('form');\n\n  form.className = 'new-employee-form';\n\n  form.innerHTML = `\n    <label>\n      Name: <input name=\"name\" type=\"text\" data-qa=\"name\" required>\n    </label>\n    <label>\n      Position: <input name=\"position\" type=\"text\" data-qa=\"position\" required>\n    </label>\n    <label>\n      Office:\n      <select name=\"office\" data-qa=\"office\" required>\n        <option>Tokyo</option>\n        <option>Singapore</option>\n        <option>London</option>\n        <option>New York</option>\n        <option>Edinburgh</option>\n        <option>San Francisco</option>\n      </select>\n    </label>\n    <label>\n      Age: <input name=\"age\" type=\"number\" data-qa=\"age\" required>\n    </label>\n    <label>\n      Salary: <input name=\"salary\" type=\"number\" data-qa=\"salary\" required>\n    </label>\n    <button type=\"button\">Save to table</button>\n  `;\n  document.body.appendChild(form);\n\n  function showNotification(title, message, type) {\n    const notification = document.createElement('div');\n\n    notification.className = `notification ${type}`;\n    notification.setAttribute('data-qa', 'notification');\n\n    notification.innerHTML = `\n      <h2 class=\"title\">${title}</h2>\n      <p>${message}</p>\n    `;\n    document.body.appendChild(notification);\n\n    setTimeout(() => {\n      notification.remove();\n    }, 3000);\n  }\n\n  function validateForm() {\n    const personName = form.elements.name.value.trim();\n\n    if (personName.length < 4 && personName.length > 0) {\n      showNotification(\n        'Error!',\n        'The minimum name length is 4 letters',\n        'error',\n      );\n\n      return false;\n    }\n\n    const age = parseInt(form.elements.age.value, 10);\n\n    if (age < 18 || age > 90) {\n      showNotification('Error!', 'You are too young/old for this', 'error');\n\n      return false;\n    }\n\n    return Array.from(form.elements).every((input) => {\n      if (input.tagName === 'INPUT' || input.tagName === 'SELECT') {\n        if (!input.value.trim()) {\n          showNotification('Error!', 'Fill in all fields', 'error');\n\n          return false;\n        }\n      }\n\n      return true;\n    });\n  }\n\n  function getFormData() {\n    return {\n      name: form.elements.name.value.trim(),\n      position: form.elements.position.value.trim(),\n      office: form.elements.office.value.trim(),\n      age: parseInt(form.elements.age.value, 10),\n      salary: parseFloat(form.elements.salary.value.replace(/[^0-9.]/g, '')),\n    };\n  }\n\n  form.querySelector('button').addEventListener('click', (e) => {\n    e.preventDefault();\n\n    if (!validateForm()) {\n      return;\n    }\n\n    const newPerson = getFormData();\n    const newRow = document.createElement('tr');\n\n    newRow.innerHTML = `\n      <td>${newPerson.name}</td>\n      <td>${newPerson.position}</td>\n      <td>${newPerson.office}</td>\n      <td>${newPerson.age}</td>\n      <td>$${newPerson.salary.toLocaleString('en')}</td>\n    `;\n    tbody.prepend(newRow);\n    form.reset();\n    showNotification('Success!', '+1 employee', 'success');\n  });\n});\n"],"names":["document","addEventListener","updateRows","rows","Array","from","tbody","querySelectorAll","sortColumn","index","sort","a","b","cellA","cells","textContent","trim","cellB","includes","valA","parseFloat","replace","valB","sortOrder","localeCompare","innerHTML","forEach","row","appendChild","toggleActiveRow","r","classList","remove","add","showNotification","title","message","type","notification","createElement","className","concat","setAttribute","body","setTimeout","validateForm","personName","form","elements","name","value","length","age","parseInt","every","input","tagName","headers","querySelector","fill","header","e","target","closest","preventDefault","newPerson","position","office","salary","newRow","toLocaleString","prepend","reset"],"version":3,"file":"index.765cba7a.js.map"}